SELECT USER
FROM DUAL;
--==>> SCOTT


--○ TBL_JUMUNBACKUP 테이블과 TBL_JUMUN 테이블에서
--   제품코드와 주문량의 값이 똑같은 행의 정보를
--   주문번호, 제품코드, 주문수량, 주문일자 항목으로 조회한다.

--방법 1.
SELECT JECODE, JUSU
FROM TBL_JUMUNBACKUP
INTERSECT
SELECT JECODE, JUSU
FROM TBL_JUMUN;

/*
꼬북칩	30
와클	10
칸쵸	20
포카칩	40
홈런볼	50
*/

SELECT JUNO, JECODE, JUSU, JUDAY
FROM TBL_JUMUNBACKUP
INTERSECT
SELECT JUNO, JECODE, JUSU, JUDAY
FROM TBL_JUMUN;
--==>> 조회 결과 없음 (전부 일치하는 데이터가 존재하지 않음)


ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';
--==>> Session이(가) 변경되었습니다.

SELECT T2.JUNO "주문번호", T1.JECODE "제품코드", T1.JUSU "주문수량", T2.JUDAY "주문일자"
FROM
(
    SELECT JECODE, JUSU
    FROM TBL_JUMUNBACKUP
    INTERSECT
    SELECT JECODE, JUSU
    FROM TBL_JUMUN
) T1
JOIN
(
    SELECT JUNO, JECODE, JUSU, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JUNO, JECODE, JUSU, JUDAY
    FROM TBL_JUMUN
) T2
ON T1.JECODE = T2.JECODE
   AND T1.JUSU = T2.JUSU;
/*
     2	와클	10	2001-11-01 09:23:37
     3	꼬북칩	30	2001-11-01 11:41:00
     5	홈런볼	50	2001-11-03 15:50:00
     8	포카칩	40	2001-11-13 09:41:14
    10	칸쵸	20	2001-11-20 14:17:00
938767	와클	10	2021-04-01 14:25:10
938768	홈런볼	50	2021-04-01 14:25:26
938769	꼬북칩	30	2021-04-01 14:26:15
938772	포카칩	40	2021-04-01 14:27:47
938774	칸쵸	20	2021-04-01 14:28:31
*/


--방법2-1.
SELECT *
FROM
(
    SELECT JUNO, JECODE, JUSU, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JUNO, JECODE, JUSU, JUDAY
    FROM TBL_JUMUN
) T
--WHERE JECODE||JUSU IN ('와클','꼬북칩','홈런볼','포카칩','칸쵸')
WHERE CONCAT(JECODE,JUSU) IN ('와클10','꼬북칩30','홈런볼50','포카칩40','칸쵸20');
/*
     2	와클	10	2001-11-01 09:23:37
     3	꼬북칩	30	2001-11-01 11:41:00
     5	홈런볼	50	2001-11-03 15:50:00
     8	포카칩	40	2001-11-13 09:41:14
    10	칸쵸	20	2001-11-20 14:17:00
938767	와클	10	2021-04-01 14:25:10
938768	홈런볼	50	2021-04-01 14:25:26
938769	꼬북칩	30	2021-04-01 14:26:15
938772	포카칩	40	2021-04-01 14:27:47
938774	칸쵸	20	2021-04-01 14:28:31
*/


--방법 2-2.
SELECT CONCAT(JECODE, JUSU)
FROM TBL_JUMUNBACKUP
INTERSECT
SELECT CONCAT(JECODE, JUSU)
FROM TBL_JUMUN;
/*
꼬북칩30
와클10
칸쵸20
포카칩40
홈런볼50
*/

SELECT *
FROM
(
    SELECT JUNO, JECODE, JUSU, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JUNO, JECODE, JUSU, JUDAY
    FROM TBL_JUMUN
) T
WHERE CONCAT(JECODE,JUSU) = ANY(SELECT CONCAT(JECODE, JUSU)
                                FROM TBL_JUMUNBACKUP
                                INTERSECT
                                SELECT CONCAT(JECODE, JUSU)
                                FROM TBL_JUMUN);
/*
     2	와클	10	2001-11-01 09:23:37
     3	꼬북칩	30	2001-11-01 11:41:00
     5	홈런볼	50	2001-11-03 15:50:00
     8	포카칩	40	2001-11-13 09:41:14
    10	칸쵸	20	2001-11-20 14:17:00
938767	와클	10	2021-04-01 14:25:10
938768	홈런볼	50	2021-04-01 14:25:26
938769	꼬북칩	30	2021-04-01 14:26:15
938772	포카칩	40	2021-04-01 14:27:47
938774	칸쵸	20	2021-04-01 14:28:31
*/


--○ MINUS: 차집합
SELECT JECODE, JUSU
FROM TBL_JUMUNBACKUP
MINUS
SELECT JECODE, JUSU
FROM TBL_JUMUN;
/*
감자칩	    20
눈을감자	10
바나나킥	40
쫀득초코칩	20
칙촉	    12
*/

/*
○ 차집합
    
A = {10,20,30,40,50}
B = {10,20,30}
    
A-B = {40,50}
*/


--○ JOIN 보충 설명: NATURAL JOIN
SELECT D.DEPTNO, D.DNAME, E.ENAME, E.SAL
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO; --연결고리 컬럼을 먼저 찾아야 함
/*
10	ACCOUNTING	CLARK	2450
10	ACCOUNTING	KING	5000
10	ACCOUNTING	MILLER	1300
20	RESEARCH	JONES	2975
20	RESEARCH	FORD	3000
20	RESEARCH	ADAMS	1100
20	RESEARCH	SMITH	 800
20	RESEARCH	SCOTT	3000
30	SALES	    WARD	1250
30	SALES	    TURNER	1500
30	SALES	    ALLEN	1600
30	SALES	    JAMES	 950
30	SALES	    BLAKE	2850
30	SALES	    MARTIN	1250
*/

SELECT DEPTNO, DNAME, ENAME, SAL
FROM EMP JOIN DEPT;
--==>> 에러 발생(missing keyword)

SELECT DEPTNO, DNAME, ENAME, SAL
FROM EMP NATURAL JOIN DEPT;
/*
10	ACCOUNTING	CLARK	2450
10	ACCOUNTING	KING	5000
10	ACCOUNTING	MILLER	1300
20	RESEARCH	JONES	2975
20	RESEARCH	FORD	3000
20	RESEARCH	ADAMS	1100
20	RESEARCH	SMITH	 800
20	RESEARCH	SCOTT	3000
30	SALES	    WARD	1250
30	SALES	    TURNER	1500
30	SALES	    ALLEN	1600
30	SALES	    JAMES	 950
30	SALES	    BLAKE	2850
30	SALES	    MARTIN	1250
*/

SELECT DEPTNO, DNAME, ENAME, SAL
FROM EMP JOIN DEPT
USING(DEPTNO);  --DEPTNO를 USING해서 EMP와 DEPT를 JOIN
/*
10	ACCOUNTING	CLARK	2450
10	ACCOUNTING	KING	5000
10	ACCOUNTING	MILLER	1300
20	RESEARCH	JONES	2975
20	RESEARCH	FORD	3000
20	RESEARCH	ADAMS	1100
20	RESEARCH	SMITH	 800
20	RESEARCH	SCOTT	3000
30	SALES	    WARD	1250
30	SALES	    TURNER	1500
30	SALES	    ALLEN	1600
30	SALES	    JAMES	 950
30	SALES	    BLAKE	2850
30	SALES	    MARTIN	1250
*/